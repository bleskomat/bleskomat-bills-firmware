#ifndef BLESKOMAT_FONTS_COURIER_PRIME_CODE8PT7B_H
#define BLESKOMAT_FONTS_COURIER_PRIME_CODE8PT7B_H

#include <GxEPD2_GFX.h>
#include <pgmspace.h>

const char Courier_Prime_Code8pt7bBitmaps[] PROGMEM = {
  0xEA, 0xA3, 0xC0, 0xCE, 0x73, 0x10, 0x09, 0x09, 0x1F, 0xE2, 0x41, 0x27,
  0xF8, 0x90, 0x48, 0x24, 0x00, 0x10, 0x21, 0xF2, 0x3C, 0x0F, 0x07, 0x81,
  0x82, 0xF8, 0x40, 0x80, 0x70, 0x68, 0xE6, 0xCE, 0xC0, 0x80, 0x98, 0x92,
  0x89, 0x03, 0x00, 0x3C, 0xC9, 0x02, 0x02, 0x0E, 0x77, 0xC6, 0xCE, 0xF4,
  0xEA, 0x09, 0x88, 0x84, 0x42, 0x10, 0x42, 0x18, 0x61, 0x80, 0x84, 0x23,
  0x11, 0x11, 0x12, 0x6C, 0x80, 0x10, 0x10, 0x10, 0xD3, 0x7C, 0x38, 0x2C,
  0x44, 0x10, 0x20, 0x47, 0xF1, 0x02, 0x04, 0x00, 0x7B, 0x40, 0xFE, 0xF0,
  0x04, 0x20, 0x86, 0x10, 0xC2, 0x08, 0x61, 0x0C, 0x20, 0x80, 0x38, 0xC9,
  0x1A, 0x5D, 0x2E, 0x59, 0xB2, 0x38, 0x33, 0xCB, 0x0C, 0x30, 0xC3, 0x0C,
  0xFC, 0xF2, 0x20, 0x82, 0x18, 0xC6, 0x30, 0xFC, 0x78, 0x88, 0x10, 0x23,
  0x80, 0x81, 0xE2, 0x7C, 0x08, 0x30, 0x61, 0x46, 0x89, 0x3F, 0x84, 0x08,
  0x7C, 0x81, 0x03, 0xC4, 0x40, 0xC1, 0xE2, 0x78, 0x39, 0x88, 0x3E, 0xCE,
  0x18, 0x73, 0x78, 0xFC, 0x30, 0x86, 0x10, 0x42, 0x08, 0x60, 0x73, 0x28,
  0xE2, 0x72, 0x38, 0x63, 0x78, 0x38, 0x8B, 0x0A, 0x37, 0xA0, 0xC1, 0x0C,
  0x70, 0xF0, 0x3C, 0x6C, 0x00, 0xF6, 0x80, 0x06, 0x39, 0xC6, 0x07, 0x03,
  0x81, 0x80, 0xFE, 0x00, 0x00, 0x0F, 0xE0, 0xC0, 0x60, 0x30, 0x10, 0xC6,
  0x30, 0x00, 0x74, 0x42, 0x13, 0x10, 0x80, 0x21, 0x00, 0x1E, 0x10, 0x93,
  0xAA, 0xD9, 0x4D, 0xA5, 0x6C, 0x80, 0x3E, 0x00, 0x18, 0x38, 0x28, 0x24,
  0x44, 0x7C, 0x42, 0x82, 0x83, 0xFA, 0x38, 0x63, 0xFA, 0x18, 0x61, 0xF8,
  0x3C, 0xC7, 0x04, 0x08, 0x10, 0x30, 0x31, 0x3C, 0xF9, 0x0E, 0x0C, 0x18,
  0x30, 0x60, 0xC3, 0xF8, 0xFE, 0x08, 0x20, 0xFA, 0x08, 0x20, 0xFC, 0xFE,
  0x08, 0x20, 0xFA, 0x08, 0x20, 0x80, 0x3C, 0x87, 0x04, 0x08, 0xF0, 0x60,
  0xA1, 0x3C, 0x83, 0x06, 0x0C, 0x1F, 0xF0, 0x60, 0xC1, 0x82, 0xFC, 0x82,
  0x08, 0x20, 0x82, 0x08, 0xFC, 0x3C, 0x10, 0x41, 0x04, 0x10, 0x71, 0x78,
  0x86, 0x29, 0x28, 0xE2, 0x49, 0xA3, 0x84, 0x82, 0x08, 0x20, 0x82, 0x08,
  0x20, 0xFC, 0xC3, 0x8F, 0x9D, 0x7B, 0xB3, 0x60, 0xC1, 0x82, 0xC3, 0x86,
  0x8D, 0x99, 0x31, 0x63, 0xC3, 0x82, 0x3C, 0x46, 0x82, 0x83, 0x81, 0x83,
  0x82, 0x46, 0x3C, 0xFA, 0x38, 0x61, 0x8F, 0xE8, 0x20, 0x80, 0x3C, 0x46,
  0x82, 0x83, 0x81, 0x83, 0x9A, 0x4E, 0x3C, 0x02, 0xFA, 0x38, 0x63, 0xFA,
  0x49, 0xA2, 0x84, 0x7C, 0x87, 0x02, 0x03, 0xC0, 0xC0, 0xE3, 0x7C, 0xFE,
  0x20, 0x40, 0x81, 0x02, 0x04, 0x08, 0x10, 0x83, 0x06, 0x0C, 0x18, 0x30,
  0x70, 0xA3, 0x3C, 0x83, 0x82, 0x42, 0x44, 0x64, 0x2C, 0x28, 0x38, 0x18,
  0x81, 0x81, 0x93, 0x9A, 0xAA, 0xAA, 0xA6, 0x46, 0x46, 0xC2, 0x8C, 0xB1,
  0xC1, 0x07, 0x09, 0x23, 0x82, 0x82, 0x8D, 0x91, 0x41, 0x82, 0x04, 0x08,
  0x10, 0xFE, 0x08, 0x30, 0x41, 0x06, 0x08, 0x20, 0xFE, 0xF8, 0x88, 0x88,
  0x88, 0x88, 0x88, 0xF0, 0x82, 0x0C, 0x10, 0x40, 0x82, 0x0C, 0x10, 0x60,
  0x82, 0x04, 0xF1, 0x11, 0x11, 0x11, 0x11, 0x11, 0xF0, 0x21, 0xC5, 0x32,
  0x8C, 0xFF, 0xC6, 0x10, 0x7C, 0x8C, 0x0B, 0xFC, 0x38, 0xDE, 0x80, 0xC1,
  0x83, 0x07, 0xEE, 0x78, 0x70, 0xE1, 0xE7, 0xF8, 0x3C, 0x87, 0x04, 0x0C,
  0x08, 0x4F, 0x00, 0x02, 0x04, 0x09, 0xD4, 0x70, 0x60, 0xC1, 0x46, 0x74,
  0x3C, 0x8F, 0x0F, 0xF8, 0x08, 0x4F, 0x80, 0x1E, 0x11, 0x30, 0x30, 0xFE,
  0x30, 0x30, 0x30, 0x30, 0x30, 0x3A, 0x8E, 0x0C, 0x18, 0x28, 0xCE, 0x81,
  0x86, 0xF8, 0x82, 0x08, 0x2E, 0xC6, 0x18, 0x61, 0x86, 0x10, 0x10, 0x20,
  0x03, 0x81, 0x02, 0x04, 0x08, 0x11, 0xFC, 0x0C, 0x30, 0x1F, 0x04, 0x10,
  0x41, 0x04, 0x10, 0x73, 0x78, 0x82, 0x08, 0x21, 0x9A, 0xCF, 0x34, 0x8A,
  0x10, 0x70, 0x20, 0x40, 0x81, 0x02, 0x04, 0x08, 0x11, 0xFC, 0xB7, 0xB6,
  0x4C, 0x99, 0x32, 0x64, 0x80, 0xBB, 0x18, 0x61, 0x86, 0x18, 0x40, 0x3C,
  0x8E, 0x0C, 0x18, 0x28, 0xCF, 0x00, 0xFD, 0xCF, 0x0E, 0x1C, 0x3C, 0xFF,
  0x60, 0xC1, 0x80, 0x3A, 0x8E, 0x0C, 0x18, 0x28, 0xCE, 0x81, 0x02, 0x04,
  0x9E, 0x8C, 0x30, 0xC3, 0x0C, 0x00, 0x7C, 0x87, 0x03, 0xE0, 0x38, 0x5F,
  0x00, 0x20, 0x40, 0x87, 0xF2, 0x04, 0x08, 0x11, 0x1E, 0xC3, 0x87, 0x0E,
  0x1C, 0x69, 0xDC, 0x80, 0x83, 0x85, 0x1B, 0x22, 0xC7, 0x06, 0x00, 0xC0,
  0xA4, 0x53, 0x4A, 0xA7, 0x51, 0x98, 0x88, 0xC2, 0xC8, 0xE0, 0xC2, 0xCC,
  0xB0, 0x80, 0x83, 0x85, 0x13, 0x22, 0x87, 0x04, 0x08, 0x20, 0x40, 0x7E,
  0x08, 0x20, 0x83, 0x0C, 0x3F, 0x80, 0x0E, 0x30, 0x40, 0x81, 0x06, 0x30,
  0x18, 0x10, 0x20, 0x40, 0x80, 0xE0, 0xFF, 0xF8, 0xC0, 0x83, 0x0C, 0x30,
  0x40, 0xC4, 0x20, 0x83, 0x08, 0xE0, 0x73, 0x3C };

const GFXglyph Courier_Prime_Code8pt7bGlyphs[] PROGMEM = {
  {     0,   0,   0,   9,    0,    1 },   // 0x20 ' '
  {     0,   2,   9,   9,    4,   -8 },   // 0x21 '!'
  {     3,   5,   4,   9,    2,   -8 },   // 0x22 '"'
  {     6,   9,   9,   9,    0,   -8 },   // 0x23 '#'
  {    17,   7,  12,   9,    1,  -10 },   // 0x24 '$'
  {    28,   9,   9,   9,    0,   -8 },   // 0x25 '%'
  {    39,   7,  10,   9,    1,   -9 },   // 0x26 '&'
  {    48,   2,   4,   9,    4,   -8 },   // 0x27 '''
  {    49,   5,  13,   9,    2,   -9 },   // 0x28 '('
  {    58,   4,  13,   9,    3,   -9 },   // 0x29 ')'
  {    65,   8,   8,   9,    1,   -8 },   // 0x2A '*'
  {    73,   7,   7,   9,    1,   -7 },   // 0x2B '+'
  {    80,   3,   4,   9,    3,   -1 },   // 0x2C ','
  {    82,   7,   1,   9,    1,   -4 },   // 0x2D '-'
  {    83,   2,   2,   9,    4,   -1 },   // 0x2E '.'
  {    84,   6,  13,   9,    2,   -9 },   // 0x2F '/'
  {    94,   7,   9,   9,    1,   -8 },   // 0x30 '0'
  {   102,   6,   9,   9,    2,   -8 },   // 0x31 '1'
  {   109,   6,   9,   9,    2,   -8 },   // 0x32 '2'
  {   116,   7,   9,   9,    1,   -8 },   // 0x33 '3'
  {   124,   7,   9,   9,    1,   -8 },   // 0x34 '4'
  {   132,   7,   9,   9,    1,   -8 },   // 0x35 '5'
  {   140,   6,   9,   9,    2,   -8 },   // 0x36 '6'
  {   147,   6,   9,   9,    2,   -8 },   // 0x37 '7'
  {   154,   6,   9,   9,    2,   -8 },   // 0x38 '8'
  {   161,   7,   9,   9,    1,   -8 },   // 0x39 '9'
  {   169,   2,   7,   9,    4,   -6 },   // 0x3A ':'
  {   171,   3,   9,   9,    3,   -6 },   // 0x3B ';'
  {   175,   7,   7,   9,    1,   -7 },   // 0x3C '<'
  {   182,   7,   5,   9,    1,   -6 },   // 0x3D '='
  {   187,   7,   7,   9,    1,   -7 },   // 0x3E '>'
  {   194,   5,  10,   9,    2,   -9 },   // 0x3F '?'
  {   201,   9,   9,   9,    0,   -7 },   // 0x40 '@'
  {   212,   8,   9,   9,    1,   -8 },   // 0x41 'A'
  {   221,   6,   9,   9,    2,   -8 },   // 0x42 'B'
  {   228,   7,   9,   9,    1,   -8 },   // 0x43 'C'
  {   236,   7,   9,   9,    1,   -8 },   // 0x44 'D'
  {   244,   6,   9,   9,    2,   -8 },   // 0x45 'E'
  {   251,   6,   9,   9,    2,   -8 },   // 0x46 'F'
  {   258,   7,   9,   9,    1,   -8 },   // 0x47 'G'
  {   266,   7,   9,   9,    1,   -8 },   // 0x48 'H'
  {   274,   6,   9,   9,    2,   -8 },   // 0x49 'I'
  {   281,   6,   9,   9,    1,   -8 },   // 0x4A 'J'
  {   288,   6,   9,   9,    2,   -8 },   // 0x4B 'K'
  {   295,   6,   9,   9,    2,   -8 },   // 0x4C 'L'
  {   302,   7,   9,   9,    1,   -8 },   // 0x4D 'M'
  {   310,   7,   9,   9,    1,   -8 },   // 0x4E 'N'
  {   318,   8,   9,   9,    1,   -8 },   // 0x4F 'O'
  {   327,   6,   9,   9,    2,   -8 },   // 0x50 'P'
  {   334,   8,  10,   9,    1,   -8 },   // 0x51 'Q'
  {   344,   6,   9,   9,    2,   -8 },   // 0x52 'R'
  {   351,   7,   9,   9,    1,   -8 },   // 0x53 'S'
  {   359,   7,   9,   9,    1,   -8 },   // 0x54 'T'
  {   367,   7,   9,   9,    1,   -8 },   // 0x55 'U'
  {   375,   8,   9,   9,    1,   -8 },   // 0x56 'V'
  {   384,   8,   9,   9,    1,   -8 },   // 0x57 'W'
  {   393,   7,   9,   9,    1,   -8 },   // 0x58 'X'
  {   401,   7,   9,   9,    1,   -8 },   // 0x59 'Y'
  {   409,   7,   9,   9,    1,   -8 },   // 0x5A 'Z'
  {   417,   4,  13,   9,    3,   -9 },   // 0x5B '['
  {   424,   6,  13,   9,    2,   -9 },   // 0x5C '\'
  {   434,   4,  13,   9,    3,   -9 },   // 0x5D ']'
  {   441,   6,   5,   9,    2,   -8 },   // 0x5E '^'
  {   445,   8,   1,   9,    1,    3 },   // 0x5F '_'
  {   446,   4,   3,   9,    2,  -10 },   // 0x60 '`'
  {   448,   7,   7,   9,    1,   -6 },   // 0x61 'a'
  {   455,   7,  10,   9,    1,   -9 },   // 0x62 'b'
  {   464,   7,   7,   9,    1,   -6 },   // 0x63 'c'
  {   471,   7,  10,   9,    1,   -9 },   // 0x64 'd'
  {   480,   7,   7,   9,    1,   -6 },   // 0x65 'e'
  {   487,   8,  10,   9,    1,   -9 },   // 0x66 'f'
  {   497,   7,  10,   9,    1,   -6 },   // 0x67 'g'
  {   506,   6,  10,   9,    2,   -9 },   // 0x68 'h'
  {   514,   7,  10,   9,    1,   -9 },   // 0x69 'i'
  {   523,   6,  13,   9,    1,   -9 },   // 0x6A 'j'
  {   533,   6,  10,   9,    2,   -9 },   // 0x6B 'k'
  {   541,   7,  10,   9,    1,   -9 },   // 0x6C 'l'
  {   550,   7,   7,   9,    1,   -6 },   // 0x6D 'm'
  {   557,   6,   7,   9,    2,   -6 },   // 0x6E 'n'
  {   563,   7,   7,   9,    1,   -6 },   // 0x6F 'o'
  {   570,   7,  10,   9,    1,   -6 },   // 0x70 'p'
  {   579,   7,  10,   9,    1,   -6 },   // 0x71 'q'
  {   588,   6,   7,   9,    2,   -6 },   // 0x72 'r'
  {   594,   7,   7,   9,    1,   -6 },   // 0x73 's'
  {   601,   7,   9,   9,    1,   -8 },   // 0x74 't'
  {   609,   7,   7,   9,    1,   -6 },   // 0x75 'u'
  {   616,   7,   7,   9,    1,   -6 },   // 0x76 'v'
  {   623,   9,   7,   9,    0,   -6 },   // 0x77 'w'
  {   631,   7,   7,   9,    1,   -6 },   // 0x78 'x'
  {   638,   7,  10,   9,    1,   -6 },   // 0x79 'y'
  {   647,   7,   7,   9,    1,   -6 },   // 0x7A 'z'
  {   654,   7,  13,   9,    1,   -9 },   // 0x7B '{'
  {   666,   1,  13,   9,    4,   -9 },   // 0x7C '|'
  {   668,   6,  13,   9,    2,   -9 },   // 0x7D '}'
  {   678,   7,   2,   9,    1,   -4 } }; // 0x7E '~'

const GFXfont Courier_Prime_Code8pt7b PROGMEM = {
  (uint8_t  *)Courier_Prime_Code8pt7bBitmaps,
  (GFXglyph *)Courier_Prime_Code8pt7bGlyphs,
  0x20, 0x7E, 16 };

// Approx. 1352 bytes

#endif
